name: Qa build and deploy

on:
  push:
    branches:
      - "master"
    paths-ignore:
      - 'android/app/build.gradle' 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Run Yarn Install
        run: |
          npm i -g corepack
          yarn install
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          
      - name: Install Android SDK
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip
          mkdir -p $ANDROID_HOME/cmdline-tools
          unzip commandlinetools-linux-8092744_latest.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/tools
          yes | $ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager --licenses
          yes | $ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager "platform-tools" "platforms;android-30"
          
      - name: Install Bundler
        run: gem install bundler -v 2.1.4
          
      - name: Bundle install
        run: bundle install
      
      - name: Setup Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > keystoreupload.keystore
                    
      - name: Export Environment Variables
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=keystoreupload" >> $GITHUB_ENV
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> $GITHUB_ENV 
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> $GITHUB_ENV

      - name: Build and Deploy
        run: |
          bundle exec fastlane android upload_to_qa_s3
        env:
          MYAPP_UPLOAD_STORE_FILE: keystoreupload.keystore
          MYAPP_UPLOAD_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_UPLOAD_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      # - name: Setup Git Identity
      #   run: |
      #     git config --global user.email "ispm19@hotmail.com"
      #     git config --global user.name "Isaias"
        
      # - name: Create Tag
      #   if: success()
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     echo "VERSION_NAME=${{ env.VERSION_NAME }}"
      #     echo "VERSION_CODE=${{ env.VERSION_CODE }}"
      #     git tag -a "v${{ env.VERSION_NAME }}-${{ env.VERSION_CODE }}" -m "Release ${{ env.VERSION_NAME }}-${{ env.VERSION_CODE }}"
      #     git push origin --tags
