platform :android do
    desc "Release for the Android beta"
    lane :beta do
      # Run the Ruby script to increment version code
      sh "ruby /increment_version_code.rb"
      
      gradle(task: 'clean', project_dir: './android')
      gradle(task: 'bundle', bundle_type: 'Release', project_dir: './android')
      supply(track: 'beta', apk: './android/app/build/outputs/apk/release/app-release.apk')
    end
  
    desc "Release for the Android production"
    lane :release do
      # Run the Ruby script to increment version code
      sh "ruby /increment_version_code.rb"
  
      # Similarly, you can create another script to increment version name if needed
      gradle(task: 'clean', project_dir: './android')
      gradle(task: 'bundle', bundle_type: 'Release', project_dir: './android', properties: {
          "android.injected.signing.store.file" => ENV['ANDROID_KEYSTORE_FILE'],
          "android.injected.signing.store.password" => ENV['ANDROID_KEYSTORE_PASSWORD'],
          "android.injected.signing.key.alias" => ENV['ANDROID_KEYSTORE_ALIAS'],
          "android.injected.signing.key.password" => ENV['ANDROID_KEYSTORE_PASSWORD']
      })
      supply(track: 'production', aab: './android/app/build/outputs/bundle/release/app-release.aab', release_status: 'draft')
    end
  end
  