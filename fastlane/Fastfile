default_platform(:android)

platform :android do
  desc "Incrementar versión, firmar y desplegar a Google Play Store"
  lane :deploy do
    # Establecer la página de códigos UTF-8
    ENV['LANG'] = 'en_US.UTF-8'

    # Obtener e incrementar versionCode y versionName
    version_code = android_get_version_code(
      gradle_file: "android/app/build.gradle"
    ).to_i + 1

    version_name = android_get_version_name(
      gradle_file: "android/app/build.gradle"
    ).split('.').tap do |parts|
      parts[-1] = (parts.last.to_i + 1).to_s
    end.join('.')

    android_set_version_code(
      gradle_file: "android/app/build.gradle",
      version_code: version_code
    )

    android_set_version_name(
      gradle_file: "android/app/build.gradle",
      version_name: version_name
    )

    # Configurar la firma y construir el bundle
    gradle(
      task: "bundle",
      build_type: "Release",
      project_dir: "android",  # especifica el directorio donde se encuentra gradlew
      properties: {
        "android.injected.signing.store.file" => ENV['MYAPP_UPLOAD_STORE_FILE'],
        "android.injected.signing.store.password" => ENV['MYAPP_UPLOAD_STORE_PASSWORD'],
        "android.injected.signing.key.alias" => ENV['MYAPP_UPLOAD_KEY_ALIAS'],
        "android.injected.signing.key.password" => ENV['MYAPP_UPLOAD_KEY_PASSWORD']
      }
    )

    # Subir a Google Play Store
    upload_to_play_store(
      json_key: 'android/testtodolist-423618-a33659dc86ef.json',
      track: 'internal',
      release_status: 'draft',
      package_name: 'com.projecttwo.ispmgodrd'
    )

    # Devolver la versión para usar en el tag
    # Establecer salidas para GitHub Actions
    File.open(ENV['GITHUB_ENV'], 'a') do |file|
      file.puts("VERSION_NAME=#{version_name}")
      file.puts("VERSION_CODE=#{version_code}")
    end
  end
end

platform :ios do
  desc "Incrementar versión, firmar y desplegar a TestFlight"
  lane :deploy do
    # Establecer la página de códigos UTF-8
    ENV['LANG'] = 'en_US.UTF-8'

    # Incrementar build number
    increment_build_number(
      xcodeproj: "ios/projectTwo.xcodeproj"
    )

    # Obtener version number
    version_number = get_version_number(
      xcodeproj: "ios/projectTwo.xcodeproj"
    )

    build_number = latest_testflight_build_number(
      app_identifier: "com.projecttwo.ispmgodrd"
    ) + 1

    # Configurar la firma y construir el ipa
    gym(
      workspace: "ios/projectTwo.xcworkspace",
      scheme: "projectTwo",
      export_method: "app-store",
      clean: true,
      output_directory: "./build",
      output_name: "projectTwo.ipa"
    )

    # Subir a TestFlight
    pilot(
      ipa: "./build/projectTwo.ipa",
      app_identifier: "com.projecttwo.ispmgodrd"
    )

    # Establecer salidas para GitHub Actions
    File.open(ENV['GITHUB_ENV'], 'a') do |file|
      file.puts("VERSION_NUMBER=#{version_number}")
      file.puts("BUILD_NUMBER=#{build_number}")
    end
  end
end